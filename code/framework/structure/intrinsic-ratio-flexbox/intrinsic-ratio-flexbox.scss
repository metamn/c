// A flexbox friendly intrinsic ratio mixin
//
// The problem was that the old intrinsic ratio mixin doesn't works inside a flexbox
// Now this is a fix. Kind of.
//
// Idea:
// - You have an item ('.intrinsic-container-item') and want to set an intrinsic ratio to display it's children ('intrinsic-container-object')
// - You should wrap all into an extra container ('intrinsic-container'). This way flexbox can calculate it's dimensions.
//
// Usage:
// ```
// <article class="article">
//  <h3>Title</h3>
//  <div class="intrinsic-container">
//    <div class="intrinsic-container-item">
//      <iframe class="intrinsic-container-object" src="//www.youtube.com/embed/KMYrIi_Mt8A" allowfullscreen></iframe>
//    </div>
//  </div>
//</article>
// ```
//
// ```
// .intrinsic-container { @include intrinsic-ratio-flexbox(16, 9, '.intrinsic-container-item', '.intrinsic-container-object')}
// ```
//
// Figure
// - figures must be warpped into a container where this mixin should be applied
// - example:
// ```
// .intrinsic-container { @include intrinsic-ratio-flexbox(16, 9, '.figure', '.picture')}
// ```
//
// Example: http://codepen.io/metamn/pen/JKJjxj
//
//
// Experimental
//
//
// Styleguide intrinsic-ratio-flexbox
@mixin intrinsic-ratio-flexbox($width, $height, $item, $object) {
  width: 100%;

  #{$item} {
    position: relative;
    height: 0;
    padding-bottom: percentage($height / $width);
    overflow: hidden;
  }

  #{$object} {
    position: absolute;
    top:0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
